name: CI-ARC-E2E-TEST

on:
  workflow_dispatch:
  
jobs:
  setup-steps:
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-go@v3
        with:
          go-version: 1.18
      - name: Install latest version of Kind
        run: go install sigs.k8s.io/kind@latest
      - name: Create Kind cluster
        run: |
          PATH=$(go env GOPATH)/bin:$PATH
          kind create cluster --name e2e-test
      - name: Kubectl installation
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          curl -LO "https://dl.k8s.io/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256"
          echo "$(cat kubectl.sha256)  kubectl" | sha256sum --check
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
      - name: Cert manager setup
        run: |
          kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.8.0/cert-manager.yaml
          kubectl -n cert-manager wait deploy/cert-manager-cainjector --for condition=available --timeout 90s
          kubectl -n cert-manager wait deploy/cert-manager-webhook --for condition=available --timeout 60s
          kubectl -n cert-manager wait deploy/cert-manager --for condition=available --timeout 60s
      - name: Create release
        run: |
          make release
          kubectl create -f release/actions-runner-controller.yaml
      - name: Create secret generic controller-manager
        run:  kubectl create secret generic controller-manager -n actions-runner-system --from-literal=github_token=${{ secrets.PERMISSION_TOKEN }}
      - name: Create deployment
        run: kubectl apply -f arc-test/autoScaleRunnerSet.yaml
      - name: RUN child workflow using ASRS
        run: |
          curl -X POST -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repos/AvaStancu/actions-workflows/actions/workflows/44661067/dispatches -d '{"ref":"main"}'
      - name: Get pods available
        id: available_pods_id
        run: |
          sleep 1m
          echo "AVAILABLE_PODS=$(kubectl get po -n actions-runner-system)\n" >> $GITHUB_OUTPUT
          echo "Do we have an output?"
          echo $GITHUB_OUTPUT
          echo ${{ steps.available_pods_id.outputs.AVAILABLE_PODS }}"
      - name: Check expected pods available
        run: go test e2e_dev_arc run_arc_jobs_test.go --pods ${{ steps.available_pods_id.outputs.AVAILABLE_PODS }}"
